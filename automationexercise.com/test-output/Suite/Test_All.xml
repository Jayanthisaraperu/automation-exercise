<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="10" hostname="DESKTOP-LP0ER4S" failures="1" tests="2" name="Test_All" time="0.043" errors="0" timestamp="02 Aug 2025 06:38:39 GMT">
  <testcase classname="automationexercise.testcases.CategoryPageTest" name="@BeforeMethod setUp" time="0.0">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest, Method, Object[], ITestResult&amp;gt; into a @BeforeMethod annotated setUp.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @BeforeMethod annotated setUp.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection
... Removed 25 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="automationexercise.testcases.CategoryPageTest" name="viewCategoryProducts" time="0.0">
    <skipped/>
  </testcase> <!-- viewCategoryProducts -->
  <testcase classname="automationexercise.testcases.CategoryPageTest" name="viewCategoryProducts" time="0.025">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;com.aventstack.extentreports.ExtentTest.log(com.aventstack.extentreports.Status, String)&amp;quot; because &amp;quot;automationexercise.utility.ListenerClass.test&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "com.aventstack.extentreports.ExtentTest.log(com.aventstack.extentreports.Status, String)" because "automationexercise.utility.ListenerClass.test" is null
at automationexercise.utility.ListenerClass.onTestSkipped(ListenerClass.java:55)
... Removed 23 stack frames]]>
    </failure>
  </testcase> <!-- viewCategoryProducts -->
  <testcase classname="automationexercise.base.BaseClass" name="@BeforeSuite loadConfig" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite loadConfig -->
  <testcase classname="automationexercise.base.BaseClass" name="@BeforeSuite loadConfig" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite loadConfig -->
  <testcase classname="automationexercise.base.BaseClass" name="@BeforeSuite loadConfig" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite loadConfig -->
  <testcase classname="automationexercise.base.BaseClass" name="@BeforeSuite loadConfig" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite loadConfig -->
  <testcase classname="automationexercise.base.BaseClass" name="@BeforeSuite loadConfig" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite loadConfig -->
  <testcase classname="automationexercise.base.BaseClass" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="automationexercise.base.BaseClass" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="automationexercise.base.BaseClass" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="automationexercise.base.BaseClass" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="automationexercise.base.BaseClass" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
</testsuite> <!-- Test_All -->
